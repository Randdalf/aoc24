import io

test_counter = {}

fn test(day, part, solver, example, expected):
    input = io.read_file_text("examples/d{day:02d}_e{example}.txt")
    actual = solver(input)
    key = (day, part)
    if key in test_counter:
        test_counter[key] += 1
    else:
        test_counter[key] = 1
    id = "D{day:02d}P{part} #{test_counter[key]}"
    if actual != expected:
        print("FAIL {id}: Expected \"{expected}\", but got \"{actual}\".")
    else:
        print("PASS {id}")

# Day 1
import d01
test(1, 1, d01.part1, 1, 11)
test(1, 2, d01.part2, 1, 31)

# Day 2
import d02
test(2, 1, d02.part1, 1, 2)
test(2, 2, d02.part2, 1, 4)

# Day 3
import d03
test(3, 1, d03.part1, 1, 161)
test(3, 2, d03.part2, 2, 48)

# Day 4
import d04
test(4, 1, d04.part1, 1, 18)
test(4, 2, d04.part2, 1, 9)

# Day 5
import d05
test(5, 1, d05.part1, 1, 143)
test(5, 2, d05.part2, 1, 123)

# Day 6
import d06
test(6, 1, d06.part1, 1, 41)
test(6, 2, d06.part2, 1, 6)

# Day 7
import d07
test(7, 1, d07.part1, 1, 3749)
test(7, 2, d07.part2, 1, 11387)

# Day 8
import d08
test(8, 1, d08.part1, 1, 14)
test(8, 2, d08.part2, 1, 34)
test(8, 2, d08.part2, 2, 9)

# Day 9
import d09
test(9, 1, d09.part1, 1, 1928)
test(9, 2, d09.part2, 1, 2858)

# Day 10
import d10
test(10, 1, d10.part1, 1, 1)
test(10, 1, d10.part1, 2, 2)
test(10, 1, d10.part1, 3, 4)
test(10, 1, d10.part1, 4, 3)
test(10, 1, d10.part1, 5, 36)
test(10, 2, d10.part2, 6, 3)
test(10, 2, d10.part2, 7, 13)
test(10, 2, d10.part2, 8, 227)
test(10, 2, d10.part2, 5, 81)

# Day 11
import d11
test(11, 1, d11.part1, 1, 55312)

# Day 12
import d12
test(12, 1, d12.part1, 1, 140)
test(12, 1, d12.part1, 2, 772)
test(12, 1, d12.part1, 3, 1930)
